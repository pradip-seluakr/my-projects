

---------------AWS SCRIPTS----------

1) HTTP

#!/bin/bash
sudo yum update -y
sudo yum install httpd -y
sudo echo "HELLO MY WORLD" > /var/www/html/index.html
sudo systemctl start httpd
sudo systemctl enable httpd

2) TOMCAT PRACTICAL (student page)

#!/bin/bash
sudo yum install java-openjdk -y
curl -O https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.78/bin/apache-tomcat-8.5.78.tar.gz
sudo tar -xzvf apache-tomcat-8.5.78.tar.gz -C /mnt
sudo curl -O https://s3-us-west-2.amazonaws.com/studentapi-cit/student.war
sudo mv student.war /mnt/apache-tomcat-8.5.78/webapps/
sudo /./mnt/apache-tomcat-8.5.78/bin/catalina.sh start


--------------------------------------------------------------------------------------------

3) Tomcat Instance (student page & connector)

#!/bin/bash
sudo yum install java-openjdk -y
curl -O https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.78/bin/apache-tomcat-8.5.78.tar.gz
sudo curl -O https://s3-us-west-2.amazonaws.com/studentapi-cit/student.war
sudo curl -O https://s3-us-west-2.amazonaws.com/studentapi-cit/mysql-connector.jar
sudo tar -xzvf apache-tomcat-8.5.78.tar.gz -C /mnt
sudo mv mysql-connector.jar /mnt/apache-tomcat-8.5.78/lib
sudo mv student.war /mnt/apache-tomcat-8.5.78/webapps/
sudo /./mnt/apache-tomcat-8.5.78/bin/catalina.sh start

cd /mnt/apache-tomcat-8.5.78/conf --> context.xml
 line 20-22 

<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
           maxTotal="500" maxIdle="30" maxWaitMillis="1000"
           username="USER" password="password" driverClassName="com.mysql.jdbc.Driver"
           url="jdbc:mysql://(IP of Mariadb Instance):3306/studentapp?useUnicode=yes&amp;characterEncoding=utf8"/>



--------------------------------------------------------------------------------------------

4) MARIADB INSTANCE

yum install mariadb* -y
systemctl start mariadb 
systemctl status mariadb 

Sy-->mysql 

create user 'USER' identified by 'password'

grant all privileges on *.* to 'USER'

flush privileges;


CREATE DATABASE studentapp;
use studentapp;
CREATE TABLE if not exists students(student_id INT NOT NULL AUTO_INCREMENT,
	student_name VARCHAR(100) NOT NULL,
    student_addr VARCHAR(100) NOT NULL,
	student_age VARCHAR(3) NOT NULL,
	student_qual VARCHAR(20) NOT NULL,
	student_percent VARCHAR(10) NOT NULL,
	student_year_passed VARCHAR(10) NOT NULL,
	PRIMARY KEY (student_id)
);


--------------------------------------------------------------------------------------------

5) TOMCAT INSTANCE with RDS (DB)

#!/bin/bash
sudo yum install java-openjdk -y
curl -O https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.78/bin/apache-tomcat-8.5.78.tar.gz
sudo tar -xzvf apache-tomcat-8.5.78.tar.gz -C /mnt
sudo curl -O https://s3-us-west-2.amazonaws.com/studentapi-cit/student.war
sudo curl -O https://s3-us-west-2.amazonaws.com/studentapi-cit/mysql-connector.jar
sudo mv student.war /mnt/apache-tomcat-8.5.78/webapps/
sudo mv mysql-connector.jar /mnt/apache-tomcat-8.5.78/lib
sudo /./mnt/apache-tomcat-8.5.78/bin/catalina.sh start
sudo yum install mariadb* -y
sudo systemctl start mariadb
sudo systemctl enable mariadb

<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
           maxTotal="500" maxIdle="30" maxWaitMillis="1000"
           username="<USER NAME>" password="<PASSWORD>" driverClassName="com.mysql.jdbc.Driver"
           url="jdbc:mysql://<DB ENDPOINT>:3306/studentapp?useUnicode=yes&amp;characterEncoding=utf8"/>

sudo mysql -h <ENDPOINT URL> -u admin -p
flush privileges;
CREATE DATABASE studentapp;
use studentapp;
CREATE TABLE if not exists students(student_id INT NOT NULL AUTO_INCREMENT,
	student_name VARCHAR(100) NOT NULL,
    student_addr VARCHAR(100) NOT NULL,
	student_age VARCHAR(3) NOT NULL,
	student_qual VARCHAR(20) NOT NULL,
	student_percent VARCHAR(10) NOT NULL,
	student_year_passed VARCHAR(10) NOT NULL,
	PRIMARY KEY (student_id));
--------------------------------------------------------------------------------------------
6) CLOUDWATCH 

#Create a EC2 instance and add following script.

#!/bin/bash
sudo yum install httpd -y
sudo echo "HELLO MY WORLD" > /var/www/html/index.html
sudo systemctl start httpd
sudo systemctl enable httpd
sudo yum update -y
sudo yum install awslogs -y
sudo systemctl start awslogs.service

cd /var/logs  ------Check access_logs & error_logs
cd /etc/awslogs

vim awscli.conf
  	region = <add current instance region code> ex. ap-south-1
vim awslogs.conf
 # At the end of file add this lines 	
[/var/log/httpd/access_log]
datetime_format = %b %d %H:%M:%S
file =/var/log/httpd/access_log
buffer_duration = 5000
log_stream_name =Myapache_server {instance_id}
initial_position = start_of_file
log_group_name =/var/log/httpd/access_log

[/var/log/httpd/error_log]
datetime_format = %b %d %H:%M:%S
file = /var/log/httpd/error_log
buffer_duration = 5000
log_stream_name =Myapache_server {instance_id}
initial_position = start_of_file
log_group_name = /var/log/httpd/error_log

sudo systemctl restart awslogs.service

--------------------------------------------------------------------------------------

7) Nginx
Create a EC2 instance,add port 22 ,80 in security group
take ssh
sudo yum install awslogs -y
sudo systemctl start awslogsd.service
sudo yum install nginx -y
sudo systemctl start nginx.service
direct hit instance ip in google...nginx homepage will show
cd /usr/share/nginx/html
create free css template
systemctl restart ngnix.service

Step1.	#Create a EC2 instance and add port 22,80 also add following script.
#!/bin/bash
sudo amazon-linux-extras install nginx1
sudo systemctl start nginx.service
Step2.	direct hit instance ip in google...nginx homepage will show.
Step3.	cd /usr/share/nginx/html.
Step4.	create free css template webpage.

-------------------------------------------------------------------------------------
8) Lambda start/stop ec2 instance

import boto3

client = boto3.client('ec2',region_name='us-east-2') #Add your region

print('Loading function')

def lambda_handler(event, context):
    responses = client.start_instances(
    InstanceIds=[
        'i-02cd2fa4945652795'
    ],

   
)

...............................................................................
import boto3
region = 'us-east-1'<.........>
instances = ['<.........>,insatnce id>']
ec2 = boto3.client('ec2', region_name=region)

def lambda_handler(event, context):
    ec2.start_instances(InstanceIds=instances)
print('started your instances: ' + str(instances))

code for start -->

import boto3
region = 'us-east-1'   --------change region code
instances = ['<insatnce id,insatnce id>']	------add instance id
ec2 = boto3.client('ec2', region_name=region)

def lambda_handler(event, context):
    ec2.stop_instances(InstanceIds=instances)
print('stopped your instances: ' + str(instances)
-------------------------------------------------------------------------------------
9) LAMP SERVER CONFIGURE

#!/bin/bash
sudo yum update -y
sudo yum install httpd -y
sudo systemctl start httpd
sudo systemctl enable httpd
sudo yum install mariadb-server -y
sudo yum install php php-mysql php-pdo php-gd php-mbstring -y
sudo echo "<?php phpinfo(); ?>" > /var/www/html/info.php
sudo systemctl restart httpd

hit ip on google --> IP/info.php
---------------------------------------------------------------------------------------